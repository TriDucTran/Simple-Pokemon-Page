{"version":3,"sources":["images/logo.png","components/NavBar.js","components/HomePage.js","components/PokemonMain.js","components/Pagination.js","components/PokemonPage.js","components/BerryMain.js","components/BerryPage.js","forms/EditPokemonForm.js","forms/AddPokemonForm.js","tables/PokemonsTable.js","components/PokemonPageAdmin.js","forms/EditBerryForm.js","forms/AddBerryForm.js","tables/BerriesTable.js","components/BerryPageAdmin.js","App.js","index.js"],"names":["NavBar","to","width","height","className","src","Logo","alt","activeClassName","HomePage","PokemonMain","props","map","pokemon","name","japanese_name","type1","type2","description","href","url","target","rel","_id","Pagination","itemsPerPage","totalItems","paginate","pageNumbers","i","Math","ceil","push","number","onClick","axiosClient","axios","create","baseURL","PokemonPage","useState","pokemons","setPokemons","currentPage","setCurrentPage","useEffect","a","get","response","data","getPokemons","indexOfLastPost","indexOfFirstPost","currentItems","slice","length","pageNumber","BerryMain","berry","firmness","type","BerryPage","berries","setBerries","getBerries","EditPokemonForm","currentPokemon","setPokemon","handleInputChange","e","value","onSubmit","preventDefault","updatePokemon","onChange","id","setEditing","AddPokemonForm","initialFormState","addPokemon","PokemonsTable","editRow","deletePokemon","colSpan","PokemonPageAdmin","setCurrentPokemon","editing","post","window","location","reload","console","log","pokemonId","delete","updatedPokemon","patch","EditBerryForm","currentBerry","setBerry","updateBerry","AddBerryForm","addBerry","BerriesTable","deleteBerry","BerryPageAdmin","setCurrentBerry","berryId","alert","updatedBerry","App","exact","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAAe,MAA0B,iC,OC2C1BA,EAvCA,WACX,OACI,8BACI,+BACI,6BACI,cAAC,IAAD,CAASC,GAAG,IAAZ,SACI,qBAAKC,MAAM,OAAOC,OAAO,OAAOC,UAAU,iBAAiBC,IAAKC,EAAMC,IAAI,aAGlF,6BACI,cAAC,IAAD,CAASN,GAAG,WAAWO,gBAAgB,SAAvC,wBAIJ,6BACI,cAAC,IAAD,CAASP,GAAG,SAASO,gBAAgB,SAArC,uBAIJ,6BACI,sBAAKJ,UAAU,WAAf,UACI,cAAC,IAAD,CAASH,GAAG,QAAQO,gBAAgB,SAApC,mBAGA,sBAAKJ,UAAU,mBAAf,UACI,cAAC,IAAD,CAASH,GAAG,sBAAsBO,gBAAgB,SAAlD,qBAGA,cAAC,IAAD,CAASP,GAAG,oBAAoBO,gBAAgB,SAAhD,iCCnBbC,EATE,WACb,OACI,sBAAKL,UAAU,MAAf,UACI,qBAAKC,IAAKC,EAAMC,IAAI,UAAUH,UAAU,iBAAiBF,MAAM,QAC/D,8D,+CCmBGQ,EAzBK,SAACC,GACjB,OACIA,EAAMC,KAAI,SAACC,GAAD,OACN,sBAAuBT,UAAU,qBAAjC,UACI,sBAAKA,UAAU,iBAAf,UACI,sBAAKA,UAAU,aAAf,UACI,wCAAWS,EAAQC,QACnB,gDAAmBD,EAAQE,oBAE/B,sBAAKX,UAAU,aAAf,UACI,yCAAYS,EAAQV,OAApB,OACA,uCAAUU,EAAQG,MAAyB,KAAlBH,EAAQI,MAAe,IAAMJ,EAAQI,MAAQJ,EAAQI,eAGtF,qBAAKb,UAAU,OAAf,SACI,4BAAIS,EAAQK,gBAEhB,8BACI,mBAAGC,KAAMN,EAAQO,IAAKC,OAAO,SAASC,IAAI,sBAA1C,8BAfET,EAAQU,SCmBfC,EAtBI,SAAC,GAGhB,IAH4D,IAA1CC,EAAyC,EAAzCA,aAAcC,EAA2B,EAA3BA,WAAYC,EAAe,EAAfA,SACtCC,EAAc,GAEXC,EAAI,EAAGA,GAAKC,KAAKC,KAAKL,EAAaD,GAAeI,IACvDD,EAAYI,KAAKH,GAGrB,OACI,qBAAKzB,UAAU,aAAf,SACI,oBAAIA,UAAU,aAAd,SACKwB,EAAYhB,KAAI,SAAAqB,GAAM,OACnB,6BACI,mBAAGC,QAAS,kBAAMP,EAASM,IAAS7B,UAAU,YAA9C,SACK6B,KAFAA,WCPvBE,EAAcC,IAAMC,OAAO,CAC7BC,QAAS,2BAoCEC,EAjCK,WAChB,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAEA,EAAsCF,mBAAS,GAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAAuBJ,mBAAS,GAAzBf,EAAP,oBAEAoB,qBAAU,WAAM,4CACZ,4BAAAC,EAAA,sEAC2BX,EAAYY,IAAI,aAD3C,OACUC,EADV,OAEIN,EAAYM,EAASC,MAFzB,4CADY,uBAAC,WAAD,wBAKZC,KACD,IAEH,IAAMC,EAAkBR,EAAclB,EAChC2B,EAAmBD,EAAkB1B,EACrC4B,EAAeZ,EAASa,MAAMF,EAAkBD,GAItD,OACI,sBAAK/C,UAAU,MAAf,UACI,qBAAKA,UAAU,UAAf,SACKM,EAAY2C,KAEjB,8BACI,cAAC,EAAD,CAAY5B,aAAcA,EAAcC,WAAYe,EAASc,OAAQ5B,SARhE,SAAA6B,GAAU,OAAIZ,EAAeY,YCAnCC,EA1BG,SAAC9C,GACf,OACIA,EAAMC,KAAI,SAAC8C,GAAD,OACN,sBAAqBtD,UAAU,qBAA/B,UACI,8BACI,wCAAWsD,EAAM5C,UAErB,sBAAKV,UAAU,iBAAf,UACI,qBAAKA,UAAU,aAAf,SACI,2CAAcsD,EAAMC,cAExB,qBAAKvD,UAAU,aAAf,SACI,uCAAUsD,EAAME,aAGxB,qBAAKxD,UAAU,OAAf,SACI,4BAAIsD,EAAMxC,gBAEd,8BACI,mBAAGC,KAAMuC,EAAMtC,IAAKC,OAAO,SAASC,IAAI,sBAAxC,8BAhBEoC,EAAMnC,SCCtBY,EAAcC,IAAMC,OAAO,CAC7BC,QAAS,2BAmCEuB,EAhCG,WACd,MAA8BrB,mBAAS,IAAvC,mBAAOsB,EAAP,KAAgBC,EAAhB,KAEA,EAAsCvB,mBAAS,GAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAAuBJ,mBAAS,GAAzBf,EAAP,oBAEAoB,qBAAU,WAAM,4CACZ,4BAAAC,EAAA,sEAC2BX,EAAYY,IAAI,YAD3C,OACUC,EADV,OAEIe,EAAWf,EAASC,MAFxB,4CADY,uBAAC,WAAD,wBAKZe,KACD,IAEH,IAAMb,EAAkBR,EAAclB,EAChC2B,EAAmBD,EAAkB1B,EACrC4B,EAAeS,EAAQR,MAAMF,EAAkBD,GAIrD,OACI,sBAAK/C,UAAU,MAAf,UACI,qBAAKA,UAAU,UAAf,SACKqD,EAAUJ,KAEf,8BACI,cAAC,EAAD,CAAY5B,aAAcA,EAAcC,WAAYoC,EAAQP,OAAQ5B,SAR/D,SAAA6B,GAAU,OAAIZ,EAAeY,Y,cCyDnCS,EAnFS,SAACtD,GACrB,MAA8B6B,mBAAS7B,EAAMuD,gBAA7C,mBAAOrD,EAAP,KAAgBsD,EAAhB,KAEAtB,qBAAU,WACNsB,EAAWxD,EAAMuD,kBAClB,CAACvD,IAGJ,IAAMyD,EAAoB,SAACC,GACvB,MAAwBA,EAAEhD,OAAlBP,EAAR,EAAQA,KAAMwD,EAAd,EAAcA,MACdH,EAAW,2BAAKtD,GAAN,kBAAgBC,EAAOwD,MAGrC,OACI,uBACIC,SAAU,SAACF,GACPA,EAAEG,iBACF7D,EAAM8D,cAAc5D,EAAQU,IAAKV,IAHzC,UAMI,8CACA,oBAAIV,OAAO,MACX,yCACA,uBACIyD,KAAK,OACL9C,KAAK,OACLwD,MAAOzD,EAAQC,KACf4D,SAAUN,IAEd,kDACA,uBACIR,KAAK,OACL9C,KAAK,gBACLwD,MAAOzD,EAAQE,cACf2D,SAAUN,IAEd,2CACA,uBACIR,KAAK,SACL9C,KAAK,SACLwD,MAAOzD,EAAQV,OACfuE,SAAUN,IAEd,2CACA,uBACIR,KAAK,OACL9C,KAAK,QACLwD,MAAOzD,EAAQG,MACf0D,SAAUN,IAEd,2CACA,uBACIR,KAAK,OACL9C,KAAK,QACLwD,MAAOzD,EAAQI,MACfyD,SAAUN,IAEd,gDACA,0BACIO,GAAG,WACH7D,KAAK,cACLwD,MAAOzD,EAAQK,YACfwD,SAAUN,IAEd,wCACA,uBACIR,KAAK,OACL9C,KAAK,MACLwD,MAAOzD,EAAQO,IACfsD,SAAUN,IAEd,kCACA,oDA1DJ,QA2DI,wBACIlC,QAAS,kBAAMvB,EAAMiE,YAAW,IAChCxE,UAAU,sBAFd,wBCeGyE,EAxFQ,SAAClE,GACpB,IAAMmE,EAAmB,CACrBH,GAAI,KACJ7D,KAAM,GACNC,cAAe,GACfZ,OAAQ,EACRa,MAAO,GACPC,MAAO,GACPC,YAAa,GACbE,IAAK,IAGT,EAA8BoB,mBAASsC,GAAvC,mBAAOjE,EAAP,KAAgBsD,EAAhB,KAEMC,EAAoB,SAACC,GACvB,MAAwBA,EAAEhD,OAAlBP,EAAR,EAAQA,KAAMwD,EAAd,EAAcA,MACdH,EAAW,2BAAKtD,GAAN,kBAAgBC,EAAOwD,MAGrC,OACI,uBACIC,SAAU,SAACF,GACPA,EAAEG,iBACG3D,EAAQC,MAASD,EAAQE,eAAkBF,EAAQV,QAAWU,EAAQG,OAAUH,EAAQK,aAAgBL,EAAQO,MAGrHT,EAAMoE,WAAWlE,GACjBsD,EAAWW,KAPnB,UAUI,iDACA,oBAAI3E,OAAO,MACX,yCACA,uBACIyD,KAAK,OACL9C,KAAK,OACLwD,MAAOzD,EAAQC,KACf4D,SAAUN,IAEd,kDACA,uBACIR,KAAK,OACL9C,KAAK,gBACLwD,MAAOzD,EAAQE,cACf2D,SAAUN,IAEd,2CACA,uBACIR,KAAK,SACL9C,KAAK,SACLwD,MAAOzD,EAAQV,OACfuE,SAAUN,IAEd,2CACA,uBACIR,KAAK,OACL9C,KAAK,QACLwD,MAAOzD,EAAQG,MACf0D,SAAUN,IAEd,2CACA,uBACIR,KAAK,OACL9C,KAAK,QACLwD,MAAOzD,EAAQI,MACfyD,SAAUN,IAEd,gDACA,0BACIO,GAAG,WACH7D,KAAK,cACLwD,MAAOzD,EAAQK,YACfwD,SAAUN,IAEd,wCACA,uBACIR,KAAK,OACL9C,KAAK,MACLwD,MAAOzD,EAAQO,IACfsD,SAAUN,IAEd,uBACA,qDCvCGY,EA3CO,SAACrE,GAAD,OACpB,kCACE,gCACE,+BACE,sCACA,+CACA,wCACA,sCACA,6CACA,sCACA,sCACA,6CAGJ,gCACGA,EAAM8B,SAASc,OAAS,EACvB5C,EAAM8B,SAAS7B,KAAI,SAACC,GAAD,OACjB,+BACE,6BAAKA,EAAQC,OACb,6BAAKD,EAAQE,gBACb,6BAAKF,EAAQV,SACb,+BAAKU,EAAQG,MAAyB,KAAlBH,EAAQI,MAAe,IAAMJ,EAAQI,MAAQJ,EAAQI,SACzE,6BAAKJ,EAAQK,cACb,6BAAI,mBAAGC,KAAMN,EAAQO,IAAKC,OAAO,SAASC,IAAI,sBAA1C,4BACJ,6BACE,wBAAQY,QAAS,WAAQvB,EAAMsE,QAAQpE,IACrCT,UAAU,sBADZ,oBAGF,6BACE,wBAAQ8B,QAAS,WAAQvB,EAAMuE,cAAcrE,EAAQU,MACnDnB,UAAU,sBADZ,wBAZKS,EAAQU,QAkBnB,6BACE,oBAAI4D,QAAS,EAAb,gCC7BJhD,G,MAAcC,IAAMC,OAAO,CAChCC,QAAS,4BA+FK8C,EA5FU,WACrB,IAWA,EAAgC5C,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAEAG,qBAAU,WAAM,4CACZ,4BAAAC,EAAA,sEAC2BX,EAAYY,IAAI,aAD3C,OACUC,EADV,OAEIN,EAAYM,EAASC,MAFzB,4CADY,uBAAC,WAAD,wBAKZC,KACD,IAEH,MAA4CV,mBArBnB,CACrBmC,GAAI,KACJ7D,KAAM,GACNC,cAAe,GACfZ,OAAQ,EACRa,MAAO,GACPC,MAAO,GACPC,YAAa,GACbE,IAAK,KAaT,mBAAO8C,EAAP,KAAuBmB,EAAvB,KACA,EAA8B7C,oBAAS,GAAvC,mBAAO8C,EAAP,KAAgBV,EAAhB,KAvB2B,4CAyB3B,WAA0B/D,GAA1B,eAAAiC,EAAA,+EAE+BX,EAAYoD,KAAK,YAAa1E,GAF7D,OAEcmC,EAFd,OAGQN,EAAYM,EAASC,MACrBuC,OAAOC,SAASC,SAJxB,gDAOQC,QAAQC,IAAR,MAPR,0DAzB2B,sBAoC3B,IAAMV,EAAa,uCAAG,WAAOW,GAAP,SAAA/C,EAAA,6DAClB8B,GAAW,GADO,SAEZzC,EAAY2D,OAAZ,oBAAgCD,IAFpB,OAGlBF,QAAQC,IAAI,oBACZJ,OAAOC,SAASC,SAJE,2CAAH,sDAObjB,EAAa,uCAAG,WAAOoB,EAAWE,GAAlB,SAAAjD,EAAA,6DAClB8B,GAAW,GADO,SAEZzC,EAAY6D,MAAZ,oBAA+BH,GAAaE,GAFhC,OAGlBP,OAAOC,SAASC,SAHE,2CAAH,wDAoBnB,OACI,sBAAKtF,UAAU,MAAf,UACI,uBADJ,IACW,uBACP,sBAAKA,UAAU,WAAf,UACI,qBAAKA,UAAU,aAAf,SACKkF,EACG,eAAC,WAAD,WACI,8CACA,cAAC,EAAD,CACIA,QAASA,EACTV,WAAYA,EACZV,eAAgBA,EAChBO,cAAeA,OAIvB,cAAC,WAAD,UACI,cAAC,EAAD,CAAgBM,WAhFb,kDAoFf,qBAAK3E,UAAU,aAAf,SACI,cAAC,EAAD,CAAeqC,SAAUA,EAAUwC,QApCnC,SAAApE,GACZ+D,GAAW,GACXS,EAAkB,CACd9D,IAAKV,EAAQU,IACbT,KAAMD,EAAQC,KACdC,cAAeF,EAAQE,cACvBZ,OAAQU,EAAQV,OAChBa,MAAOH,EAAQG,MACfC,MAAOJ,EAAQI,MACfC,YAAaL,EAAQK,YACrBE,IAAKP,EAAQO,OA0BgD8D,cAAeA,aC3BzEe,EArEO,SAACtF,GACnB,MAA0B6B,mBAAS7B,EAAMuF,cAAzC,mBAAOxC,EAAP,KAAcyC,EAAd,KAEAtD,qBAAU,WACNsD,EAASxF,EAAMuF,gBAChB,CAACvF,IAGJ,IAAMyD,EAAoB,SAACC,GACvB,MAAwBA,EAAEhD,OAAlBP,EAAR,EAAQA,KAAMwD,EAAd,EAAcA,MACd6B,EAAS,2BAAKzC,GAAN,kBAAc5C,EAAOwD,MAGjC,OACI,uBACIC,SAAU,SAACF,GACPA,EAAEG,iBACF7D,EAAMyF,YAAY1C,EAAMnC,IAAKmC,IAHrC,UAMI,8CACA,oBAAIvD,OAAO,MACX,yCACA,uBACIyD,KAAK,OACL9C,KAAK,OACLwD,MAAOZ,EAAM5C,KACb4D,SAAUN,IAEd,6CACA,uBACIR,KAAK,OACL9C,KAAK,WACLwD,MAAOZ,EAAMC,SACbe,SAAUN,IAEd,yCACA,uBACIR,KAAK,OACL9C,KAAK,QACLwD,MAAOZ,EAAME,KACbc,SAAUN,IAEd,gDACA,0BACIO,GAAG,WACH7D,KAAK,cACLwD,MAAOZ,EAAMxC,YACbwD,SAAUN,IAEd,wCACA,uBACIR,KAAK,OACL9C,KAAK,MACLwD,MAAOZ,EAAMtC,IACbsD,SAAUN,IAEd,kCACA,kDA5CJ,QA6CI,wBACIlC,QAAS,kBAAMvB,EAAMiE,YAAW,IAChCxE,UAAU,sBAFd,wBCaGiG,EAxEM,SAAC1F,GAClB,IAAMmE,EAAmB,CACrBH,GAAI,KACJ7D,KAAM,GACN6C,SAAU,GACVC,KAAM,GACN1C,YAAa,GACbE,IAAK,IAGT,EAA0BoB,mBAASsC,GAAnC,mBAAOpB,EAAP,KAAcyC,EAAd,KAEM/B,EAAoB,SAACC,GACvB,MAAwBA,EAAEhD,OAAlBP,EAAR,EAAQA,KAAMwD,EAAd,EAAcA,MACd6B,EAAS,2BAAKzC,GAAN,kBAAc5C,EAAOwD,MAGjC,OACI,uBACIC,SAAU,SAACF,GACPA,EAAEG,iBACGd,EAAM5C,MAAS4C,EAAMC,UAAaD,EAAME,MAASF,EAAMxC,aAAgBwC,EAAMtC,MAGlFT,EAAM2F,SAAS5C,GACfyC,EAASrB,KAPjB,UAUI,+CACA,oBAAI3E,OAAO,MACX,yCACA,uBACIyD,KAAK,OACL9C,KAAK,OACLwD,MAAOZ,EAAM5C,KACb4D,SAAUN,IAEd,6CACA,uBACIR,KAAK,OACL9C,KAAK,WACLwD,MAAOZ,EAAMC,SACbe,SAAUN,IAEd,yCACA,uBACIR,KAAK,OACL9C,KAAK,QACLwD,MAAOZ,EAAME,KACbc,SAAUN,IAEd,gDACA,0BACIO,GAAG,WACH7D,KAAK,cACLwD,MAAOZ,EAAMxC,YACbwD,SAAUN,IAEd,wCACA,uBACIR,KAAK,OACL9C,KAAK,MACLwD,MAAOZ,EAAMtC,IACbsD,SAAUN,IAEd,uBACA,mDCzBGmC,EAzCM,SAAC5F,GAAD,OACjB,kCACE,gCACE,+BACE,sCACA,0CACA,sCACA,6CACA,sCACA,sCACA,6CAGJ,gCACGA,EAAMmD,QAAQP,OAAS,EACtB5C,EAAMmD,QAAQlD,KAAI,SAAC8C,GAAD,OAChB,+BACE,6BAAKA,EAAM5C,OACX,6BAAK4C,EAAMC,WACX,6BAAKD,EAAME,OACX,6BAAKF,EAAMxC,cACX,6BAAI,mBAAGC,KAAMuC,EAAMtC,IAAKC,OAAO,SAASC,IAAI,sBAAxC,4BACJ,6BACE,wBAAQY,QAAS,WAAQvB,EAAMsE,QAAQvB,IACrCtD,UAAU,sBADZ,oBAGF,6BACE,wBAAQ8B,QAAS,WAAQvB,EAAM6F,YAAY9C,EAAMnC,MAC/CnB,UAAU,sBADZ,wBAXKsD,EAAMnC,QAiBjB,6BACE,oBAAI4D,QAAS,EAAb,8BC5BNhD,EAAcC,IAAMC,OAAO,CAChCC,QAAS,2BA2FKmE,EAxFQ,WACnB,IASA,EAA8BjE,mBAAS,IAAvC,mBAAOsB,EAAP,KAAgBC,EAAhB,KAEAlB,qBAAU,WAAM,4CACZ,4BAAAC,EAAA,sEAC2BX,EAAYY,IAAI,YAD3C,OACUC,EADV,OAEIe,EAAWf,EAASC,MAFxB,4CADY,uBAAC,WAAD,wBAKZe,KACD,IAEH,MAAwCxB,mBAnBf,CACrBmC,GAAI,KACJ7D,KAAM,GACN6C,SAAU,GACVC,KAAM,GACN1C,YAAa,GACbE,IAAK,KAaT,mBAAO8E,EAAP,KAAqBQ,EAArB,KACA,EAA8BlE,oBAAS,GAAvC,mBAAO8C,EAAP,KAAgBV,EAAhB,KArByB,4CAuBzB,WAAwBlB,GAAxB,eAAAZ,EAAA,+EAE+BX,EAAYoD,KAAK,WAAY7B,GAF5D,OAEcV,EAFd,OAGQe,EAAWf,EAASC,MACpBuC,OAAOC,SAASC,SAJxB,gDAOQC,QAAQC,IAAR,MAPR,0DAvByB,sBAkCzB,IAAMY,EAAW,uCAAG,WAAOG,GAAP,SAAA7D,EAAA,6DAChB8B,GAAW,GADK,SAEVzC,EAAY2D,OAAZ,mBAA+Ba,IAFrB,OAGhBC,MAAM,kBACNpB,OAAOC,SAASC,SAJA,2CAAH,sDAOXU,EAAW,uCAAG,WAAOO,EAASE,GAAhB,SAAA/D,EAAA,6DAChB8B,GAAW,GADK,SAEVzC,EAAY6D,MAAZ,mBAA8BW,GAAWE,GAF/B,OAGhBrB,OAAOC,SAASC,SAHA,2CAAH,wDAkBjB,OACI,sBAAKtF,UAAU,MAAf,UACI,uBADJ,IACW,uBACP,sBAAKA,UAAU,WAAf,UACI,qBAAKA,UAAU,aAAf,SACKkF,EACG,eAAC,WAAD,WACI,4CACA,cAAC,EAAD,CACIA,QAASA,EACTV,WAAYA,EACZsB,aAAcA,EACdE,YAAaA,OAIrB,cAAC,WAAD,UACI,cAAC,EAAD,CAAcE,SA5Eb,kDAgFb,qBAAKlG,UAAU,aAAf,SACI,cAAC,EAAD,CAAc0D,QAASA,EAASmB,QAlChC,SAAAvB,GACZkB,GAAW,GACX8B,EAAgB,CACZnF,IAAKmC,EAAMnC,IACXT,KAAM4C,EAAM5C,KACZ6C,SAAUD,EAAMC,SAChBC,KAAMF,EAAME,KACZ1C,YAAawC,EAAMxC,YACnBE,IAAKsC,EAAMtC,OA0B+CoF,YAAaA,aChEpEM,MApBf,WACE,OACE,sBAAK1G,UAAU,MAAf,UACE,cAAC,EAAD,IACA,qBAAKA,UAAU,OAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO2G,OAAK,EAACC,KAAK,IAAIC,QAAS,cAAC,EAAD,MAC/B,cAAC,IAAD,CAAOD,KAAK,WAAWC,QAAS,cAAC,EAAD,MAChC,cAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,cAAC,EAAD,MAC9B,cAAC,IAAD,CAAOD,KAAK,WACZ,cAAC,IAAD,CAAOA,KAAK,uBAAuBC,QAAS,cAAC,EAAD,MAE5C,cAAC,IAAD,CAAOD,KAAK,qBAAqBC,QAAS,cAAC,EAAD,eCbpDC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.4e0cfb42.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.c12eb752.png\";","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Logo from '../images/logo.png';\r\n\r\nconst NavBar = () => {\r\n    return (\r\n        <nav>\r\n            <ul>\r\n                <li>\r\n                    <NavLink to=\"/\">\r\n                        <img width=\"60px\" height=\"auto\" className=\"img-responsive\" src={Logo} alt=\"logo\" />\r\n                    </NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/pokemon\" activeClassName=\"active\">\r\n                        Pokemons\r\n                    </NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/berry\" activeClassName=\"active\">\r\n                        Berries\r\n                    </NavLink>\r\n                </li>\r\n                <li>\r\n                    <div className=\"dropdown\">\r\n                        <NavLink to=\"admin\" activeClassName=\"active\">\r\n                            Admin\r\n                        </NavLink>\r\n                        <div className=\"dropdown-content\">\r\n                            <NavLink to=\"admin/pokemon-admin\" activeClassName=\"active\">\r\n                                Pokemon\r\n                            </NavLink>\r\n                            <NavLink to=\"admin/berry-admin\" activeClassName=\"active\">\r\n                                Berry\r\n                            </NavLink>\r\n                        </div>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport Logo from '../images/logo.png';\r\nimport '../styles.css';\r\n\r\nconst HomePage = () => {\r\n    return (\r\n        <div className=\"App\">\r\n            <img src={Logo} alt=\"Pokemon\" className=\"img-responsive\" width=\"50%\"></img>\r\n            <h1>Welcome to Pokemon World</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomePage;","import React from 'react';\r\n\r\nconst PokemonMain = (props) => {\r\n    return (\r\n        props.map((pokemon) => (\r\n            <div key={pokemon._id} className=\"reactNativePokemon\">\r\n                <div className=\"flex-container\">\r\n                    <div className=\"flex-child\">\r\n                        <h4>Name: {pokemon.name}</h4>\r\n                        <p>Japanese Name: {pokemon.japanese_name}</p>\r\n                    </div>\r\n                    <div className=\"flex-child\">\r\n                        <p>Height: {pokemon.height}m</p>\r\n                        <p>Type: {pokemon.type1}{pokemon.type2 !== \"\" ? \"/\" + pokemon.type2 : pokemon.type2}</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"test\">\r\n                    <p>{pokemon.description}</p>\r\n                </div>\r\n                <div>\r\n                    <a href={pokemon.url} target=\"_blank\" rel=\"noopener noreferrer\">More details</a>\r\n                </div>\r\n            </div>\r\n        ))\r\n    )\r\n}\r\n\r\nexport default PokemonMain;","import React from 'react';\r\n\r\nconst Pagination = ({ itemsPerPage, totalItems, paginate }) => {\r\n    const pageNumbers = [];\r\n\r\n    for (let i = 1; i <= Math.ceil(totalItems / itemsPerPage); i++) {\r\n        pageNumbers.push(i);\r\n    }\r\n\r\n    return (\r\n        <nav className='pagination'>\r\n            <ul className='pagination'>\r\n                {pageNumbers.map(number => (\r\n                    <li key={number}>\r\n                        <p onClick={() => paginate(number)} className='page-link'>\r\n                            {number}\r\n                        </p>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Pagination;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport '../styles.css';\r\nimport PokemonMain from './PokemonMain';\r\nimport Pagination from './Pagination';\r\n\r\nconst axiosClient = axios.create({\r\n    baseURL: 'http://localhost:5000/'\r\n});\r\n\r\nconst PokemonPage = () => {\r\n    const [pokemons, setPokemons] = useState([]);\r\n\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [itemsPerPage] = useState(3);\r\n\r\n    useEffect(() => {\r\n        async function getPokemons() {\r\n            const response = await axiosClient.get(\"/pokemons\");\r\n            setPokemons(response.data);\r\n        }\r\n        getPokemons();\r\n    }, [])\r\n\r\n    const indexOfLastPost = currentPage * itemsPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - itemsPerPage;\r\n    const currentItems = pokemons.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n    const paginate = pageNumber => setCurrentPage(pageNumber);\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <div className=\"wrapper\">\r\n                {PokemonMain(currentItems)}\r\n            </div>\r\n            <div>\r\n                <Pagination itemsPerPage={itemsPerPage} totalItems={pokemons.length} paginate={paginate} />\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PokemonPage;","import React from 'react';\r\n\r\nconst BerryMain = (props) => {\r\n    return (\r\n        props.map((berry) => (\r\n            <div key={berry._id} className=\"reactNativePokemon\">\r\n                <div>\r\n                    <h2>Name: {berry.name}</h2>\r\n                </div>\r\n                <div className=\"flex-container\">\r\n                    <div className=\"flex-child\">\r\n                        <p>Firmness: {berry.firmness}</p>\r\n                    </div>\r\n                    <div className=\"flex-child\">\r\n                        <p>Type: {berry.type}</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"test\">\r\n                    <p>{berry.description}</p>\r\n                </div>\r\n                <div>\r\n                    <a href={berry.url} target=\"_blank\" rel=\"noopener noreferrer\">More details</a>\r\n                </div>\r\n            </div>\r\n        ))\r\n    )\r\n}\r\n\r\nexport default BerryMain;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport '../styles.css';\r\nimport BerryMain from './BerryMain';\r\nimport Pagination from './Pagination';\r\n\r\nconst axiosClient = axios.create({\r\n    baseURL: 'http://localhost:5000/'\r\n});\r\n\r\nconst BerryPage = () => {\r\n    const [berries, setBerries] = useState([]);\r\n\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [itemsPerPage] = useState(3);\r\n\r\n    useEffect(() => {\r\n        async function getBerries() {\r\n            const response = await axiosClient.get(\"/berries\");\r\n            setBerries(response.data);\r\n        }\r\n        getBerries();\r\n    }, [])\r\n\r\n    const indexOfLastPost = currentPage * itemsPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - itemsPerPage;\r\n    const currentItems = berries.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n    const paginate = pageNumber => setCurrentPage(pageNumber);\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <div className=\"wrapper\">\r\n                {BerryMain(currentItems)}\r\n            </div>\r\n            <div>\r\n                <Pagination itemsPerPage={itemsPerPage} totalItems={berries.length} paginate={paginate} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BerryPage;","import React, { useState, useEffect } from \"react\";\r\n\r\nconst EditPokemonForm = (props) => {\r\n    const [pokemon, setPokemon] = useState(props.currentPokemon)\r\n\r\n    useEffect(() => {\r\n        setPokemon(props.currentPokemon)\r\n    }, [props]\r\n    )\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target\r\n        setPokemon({ ...pokemon, [name]: value })\r\n    }\r\n\r\n    return (\r\n        <form\r\n            onSubmit={(e) => {\r\n                e.preventDefault()\r\n                props.updatePokemon(pokemon._id, pokemon)\r\n            }}\r\n        >\r\n            <h3>Edit Pokemon</h3>\r\n            <hr height=\"3\" />\r\n            <label>Name</label>\r\n            <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={pokemon.name}\r\n                onChange={handleInputChange}\r\n            />\r\n            <label>Japanese Name</label>\r\n            <input\r\n                type=\"text\"\r\n                name=\"japanese_name\"\r\n                value={pokemon.japanese_name}\r\n                onChange={handleInputChange}\r\n            ></input>\r\n            <label>Height</label>\r\n            <input\r\n                type=\"number\"\r\n                name=\"height\"\r\n                value={pokemon.height}\r\n                onChange={handleInputChange}\r\n            />\r\n            <label>Type 1</label>\r\n            <input\r\n                type=\"text\"\r\n                name=\"type1\"\r\n                value={pokemon.type1}\r\n                onChange={handleInputChange}\r\n            />\r\n            <label>Type 2</label>\r\n            <input\r\n                type=\"text\"\r\n                name=\"type2\"\r\n                value={pokemon.type2}\r\n                onChange={handleInputChange}\r\n            />\r\n            <label>Description</label>\r\n            <textarea\r\n                id=\"textarea\"\r\n                name=\"description\"\r\n                value={pokemon.description}\r\n                onChange={handleInputChange}\r\n            ></textarea>\r\n            <label>URL</label>\r\n            <input\r\n                type=\"text\"\r\n                name=\"url\"\r\n                value={pokemon.url}\r\n                onChange={handleInputChange}\r\n            />\r\n            <p> </p>\r\n            <button>Update Pokemon</button> &nbsp;\r\n            <button\r\n                onClick={() => props.setEditing(false)}\r\n                className=\"button muted-button\"\r\n            >\r\n                Cancel\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default EditPokemonForm;","import React, { useState } from \"react\";\r\n\r\nconst AddPokemonForm = (props) => {\r\n    const initialFormState = {\r\n        id: null,\r\n        name: '',\r\n        japanese_name: '',\r\n        height: 0,\r\n        type1: '',\r\n        type2: '',\r\n        description: '',\r\n        url: ''\r\n    }\r\n\r\n    const [pokemon, setPokemon] = useState(initialFormState)\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target\r\n        setPokemon({ ...pokemon, [name]: value })\r\n    }\r\n\r\n    return (\r\n        <form\r\n            onSubmit={(e) => {\r\n                e.preventDefault()\r\n                if (!pokemon.name || !pokemon.japanese_name || !pokemon.height || !pokemon.type1 || !pokemon.description || !pokemon.url)\r\n                    return\r\n\r\n                props.addPokemon(pokemon)\r\n                setPokemon(initialFormState)\r\n            }}\r\n        >\r\n            <h3>Add New Pokemon</h3>\r\n            <hr height=\"3\" />\r\n            <label>Name</label>\r\n            <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={pokemon.name}\r\n                onChange={handleInputChange}\r\n            />\r\n            <label>Japanese Name</label>\r\n            <input\r\n                type=\"text\"\r\n                name=\"japanese_name\"\r\n                value={pokemon.japanese_name}\r\n                onChange={handleInputChange}\r\n            ></input>\r\n            <label>Height</label>\r\n            <input\r\n                type=\"number\"\r\n                name=\"height\"\r\n                value={pokemon.height}\r\n                onChange={handleInputChange}\r\n            />\r\n            <label>Type 1</label>\r\n            <input\r\n                type=\"text\"\r\n                name=\"type1\"\r\n                value={pokemon.type1}\r\n                onChange={handleInputChange}\r\n            />\r\n            <label>Type 2</label>\r\n            <input\r\n                type=\"text\"\r\n                name=\"type2\"\r\n                value={pokemon.type2}\r\n                onChange={handleInputChange}\r\n            />\r\n            <label>Description</label>\r\n            <textarea\r\n                id=\"textarea\"\r\n                name=\"description\"\r\n                value={pokemon.description}\r\n                onChange={handleInputChange}\r\n            ></textarea>\r\n            <label>URL</label>\r\n            <input\r\n                type=\"text\"\r\n                name=\"url\"\r\n                value={pokemon.url}\r\n                onChange={handleInputChange}\r\n            />\r\n            <br />\r\n            <button>Add Pokemon</button>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddPokemonForm;","import React from 'react'\r\n\r\nconst PokemonsTable = (props) => (\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Name</th>\r\n        <th>Japanese Name</th>\r\n        <th>Height</th>\r\n        <th>Type</th>\r\n        <th>Description</th>\r\n        <th>Link</th>\r\n        <th>Edit</th>\r\n        <th>Delete</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      {props.pokemons.length > 0 ? (\r\n        props.pokemons.map((pokemon) => (\r\n          <tr key={pokemon._id}>\r\n            <td>{pokemon.name}</td>\r\n            <td>{pokemon.japanese_name}</td>\r\n            <td>{pokemon.height}</td>\r\n            <td>{pokemon.type1}{pokemon.type2 !== \"\" ? \"/\" + pokemon.type2 : pokemon.type2}</td>\r\n            <td>{pokemon.description}</td>\r\n            <td><a href={pokemon.url} target=\"_blank\" rel=\"noopener noreferrer\">More details</a></td>\r\n            <td>\r\n              <button onClick={() => { props.editRow(pokemon) }}\r\n                className=\"button muted-button\">Edit</button>\r\n            </td>\r\n            <td>\r\n              <button onClick={() => { props.deletePokemon(pokemon._id) }}\r\n                className=\"button muted-button\">Delete</button>\r\n            </td>\r\n          </tr>\r\n        ))\r\n      ) : (\r\n        <tr>\r\n          <td colSpan={8}>No Pokemon</td>\r\n        </tr>\r\n      )}\r\n    </tbody>\r\n  </table>\r\n)\r\n\r\nexport default PokemonsTable;","import React, { useState, useEffect, Fragment } from \"react\";\r\nimport axios from \"axios\";\r\nimport EditPokemonForm from '../forms/EditPokemonForm';\r\nimport AddPokemonForm from '../forms/AddPokemonForm';\r\nimport PokemonsTable from '../tables/PokemonsTable';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport '../styles.css';\r\n\r\n\r\nconst axiosClient = axios.create({\r\n\tbaseURL: 'http://localhost:5000/'\r\n});\r\n\r\nconst PokemonPageAdmin = () => {\r\n    const initialFormState = {\r\n        id: null,\r\n        name: '',\r\n        japanese_name: '',\r\n        height: 0,\r\n        type1: '',\r\n        type2: '',\r\n        description: '',\r\n        url: ''\r\n    }\r\n\r\n    const [pokemons, setPokemons] = useState([])\r\n\r\n    useEffect(() => {\r\n        async function getPokemons() {\r\n            const response = await axiosClient.get(\"/pokemons\");\r\n            setPokemons(response.data);\r\n        }\r\n        getPokemons();\r\n    }, []);\r\n\r\n    const [currentPokemon, setCurrentPokemon] = useState(initialFormState)\r\n    const [editing, setEditing] = useState(false)\r\n\r\n    async function addPokemon(pokemon) {\r\n        try {\r\n            const response = await axiosClient.post(\"/pokemons\", pokemon);\r\n            setPokemons(response.data);\r\n            window.location.reload();\r\n        }\r\n        catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    const deletePokemon = async (pokemonId) => {\r\n        setEditing(false)\r\n        await axiosClient.delete(`/pokemons/${pokemonId}`);\r\n        console.log(\"Pokemon deleted!\");\r\n        window.location.reload();\r\n    }\r\n\r\n    const updatePokemon = async (pokemonId, updatedPokemon) => {\r\n        setEditing(false)\r\n        await axiosClient.patch(`/pokemons/${pokemonId}`, updatedPokemon);\r\n        window.location.reload();\r\n    }\r\n\r\n    const editRow = pokemon => {\r\n        setEditing(true)\r\n        setCurrentPokemon({\r\n            _id: pokemon._id,\r\n            name: pokemon.name,\r\n            japanese_name: pokemon.japanese_name,\r\n            height: pokemon.height,\r\n            type1: pokemon.type1,\r\n            type2: pokemon.type2,\r\n            description: pokemon.description,\r\n            url: pokemon.url\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <br /> <br />\r\n            <div className=\"flex-row\">\r\n                <div className=\"flex-large\">\r\n                    {editing ? (\r\n                        <Fragment>\r\n                            <h2>Edit Pokemon</h2>\r\n                            <EditPokemonForm\r\n                                editing={editing}\r\n                                setEditing={setEditing}\r\n                                currentPokemon={currentPokemon}\r\n                                updatePokemon={updatePokemon}\r\n                            />\r\n                        </Fragment>\r\n                    ) : (\r\n                        <Fragment>\r\n                            <AddPokemonForm addPokemon={addPokemon} />\r\n                        </Fragment>\r\n                    )}\r\n                </div>\r\n                <div className=\"flex-large\">\r\n                    <PokemonsTable pokemons={pokemons} editRow={editRow} deletePokemon={deletePokemon} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PokemonPageAdmin;","import React, { useState, useEffect } from \"react\";\r\n\r\nconst EditBerryForm = (props) => {\r\n    const [berry, setBerry] = useState(props.currentBerry)\r\n\r\n    useEffect(() => {\r\n        setBerry(props.currentBerry)\r\n    }, [props]\r\n    )\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target\r\n        setBerry({ ...berry, [name]: value })\r\n    }\r\n\r\n    return (\r\n        <form\r\n            onSubmit={(e) => {\r\n                e.preventDefault()\r\n                props.updateBerry(berry._id, berry)\r\n            }}\r\n        >\r\n            <h3>Edit Pokemon</h3>\r\n            <hr height=\"3\" />\r\n            <label>Name</label>\r\n            <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={berry.name}\r\n                onChange={handleInputChange}\r\n            />\r\n            <label>Firmness</label>\r\n            <input\r\n                type=\"text\"\r\n                name=\"firmness\"\r\n                value={berry.firmness}\r\n                onChange={handleInputChange}\r\n            ></input>\r\n            <label>Type</label>\r\n            <input\r\n                type=\"text\"\r\n                name=\"type1\"\r\n                value={berry.type}\r\n                onChange={handleInputChange}\r\n            />\r\n            <label>Description</label>\r\n            <textarea\r\n                id=\"textarea\"\r\n                name=\"description\"\r\n                value={berry.description}\r\n                onChange={handleInputChange}\r\n            ></textarea>\r\n            <label>URL</label>\r\n            <input\r\n                type=\"text\"\r\n                name=\"url\"\r\n                value={berry.url}\r\n                onChange={handleInputChange}\r\n            />\r\n            <p> </p>\r\n            <button>Update Berry</button> &nbsp;\r\n            <button\r\n                onClick={() => props.setEditing(false)}\r\n                className=\"button muted-button\"\r\n            >\r\n                Cancel\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default EditBerryForm;","import React, { useState } from 'react'\r\n\r\nconst AddBerryForm = (props) => {\r\n    const initialFormState = {\r\n        id: null,\r\n        name: '',\r\n        firmness: '',\r\n        type: '',\r\n        description: '',\r\n        url: ''\r\n    }\r\n\r\n    const [berry, setBerry] = useState(initialFormState)\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target\r\n        setBerry({ ...berry, [name]: value })\r\n    }\r\n\r\n    return (\r\n        <form\r\n            onSubmit={(e) => {\r\n                e.preventDefault()\r\n                if (!berry.name || !berry.firmness || !berry.type || !berry.description || !berry.url)\r\n                    return\r\n\r\n                props.addBerry(berry)\r\n                setBerry(initialFormState)\r\n            }}\r\n        >\r\n            <h3>Add New Berry</h3>\r\n            <hr height=\"3\" />\r\n            <label>Name</label>\r\n            <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={berry.name}\r\n                onChange={handleInputChange}\r\n            />\r\n            <label>Firmness</label>\r\n            <input\r\n                type=\"text\"\r\n                name=\"firmness\"\r\n                value={berry.firmness}\r\n                onChange={handleInputChange}\r\n            />\r\n            <label>Type</label>\r\n            <input\r\n                type=\"text\"\r\n                name=\"type1\"\r\n                value={berry.type}\r\n                onChange={handleInputChange}\r\n            />\r\n            <label>Description</label>\r\n            <textarea\r\n                id=\"textarea\"\r\n                name=\"description\"\r\n                value={berry.description}\r\n                onChange={handleInputChange}\r\n            ></textarea>\r\n            <label>URL</label>\r\n            <input\r\n                type=\"text\"\r\n                name=\"url\"\r\n                value={berry.url}\r\n                onChange={handleInputChange}\r\n            />\r\n            <br />\r\n            <button>Add Berry</button>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddBerryForm\r\n","import React from 'react'\r\n\r\nconst BerriesTable = (props) => (\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Firmness</th>\r\n          <th>Type</th>\r\n          <th>Description</th>\r\n          <th>Link</th>\r\n          <th>Edit</th>\r\n          <th>Delete</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {props.berries.length > 0 ? (\r\n          props.berries.map((berry) => (\r\n            <tr key={berry._id}>\r\n              <td>{berry.name}</td>\r\n              <td>{berry.firmness}</td>\r\n              <td>{berry.type}</td>\r\n              <td>{berry.description}</td>\r\n              <td><a href={berry.url} target=\"_blank\" rel=\"noopener noreferrer\">More details</a></td>\r\n              <td>\r\n                <button onClick={() => { props.editRow(berry) }}\r\n                  className=\"button muted-button\">Edit</button>\r\n              </td>\r\n              <td>\r\n                <button onClick={() => { props.deleteBerry(berry._id) }}\r\n                  className=\"button muted-button\">Delete</button>\r\n              </td>\r\n            </tr>\r\n          ))\r\n        ) : (\r\n          <tr>\r\n            <td colSpan={7}>No Berry</td>\r\n          </tr>\r\n        )}\r\n      </tbody>\r\n    </table>\r\n  )\r\n\r\nexport default BerriesTable;\r\n","import React, { useState, useEffect, Fragment } from \"react\";\r\nimport axios from \"axios\";\r\nimport EditBerryForm from '../forms/EditBerryForm';\r\nimport AddBerryForm from '../forms/AddBerryForm';\r\nimport BerriesTable from '../tables/BerriesTable';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport '../styles.css';\r\n\r\nconst axiosClient = axios.create({\r\n\tbaseURL: 'http://localhost:5000/'\r\n});\r\n\r\nconst BerryPageAdmin = () => {\r\n    const initialFormState = {\r\n        id: null,\r\n        name: '',\r\n        firmness: '',\r\n        type: '',\r\n        description: '',\r\n        url: ''\r\n    }\r\n\r\n    const [berries, setBerries] = useState([])\r\n\r\n    useEffect(() => {\r\n        async function getBerries() {\r\n            const response = await axiosClient.get(\"/berries\");\r\n            setBerries(response.data);\r\n        }\r\n        getBerries();\r\n    }, []);\r\n\r\n    const [currentBerry, setCurrentBerry] = useState(initialFormState)\r\n    const [editing, setEditing] = useState(false)\r\n\r\n    async function addBerry(berry) {\r\n        try {\r\n            const response = await axiosClient.post(\"/berries\", berry);\r\n            setBerries(response.data);\r\n            window.location.reload();\r\n        }\r\n        catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    const deleteBerry = async (berryId) => {\r\n        setEditing(false)\r\n        await axiosClient.delete(`/berries/${berryId}`);\r\n        alert(\"Berry deleted!\");\r\n        window.location.reload();\r\n    }\r\n\r\n    const updateBerry = async (berryId, updatedBerry) => {\r\n        setEditing(false)\r\n        await axiosClient.patch(`/berries/${berryId}`, updatedBerry);\r\n        window.location.reload();\r\n    }\r\n\r\n    const editRow = berry => {\r\n        setEditing(true)\r\n        setCurrentBerry({\r\n            _id: berry._id,\r\n            name: berry.name,\r\n            firmness: berry.firmness,\r\n            type: berry.type,\r\n            description: berry.description,\r\n            url: berry.url\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <br /> <br />\r\n            <div className=\"flex-row\">\r\n                <div className=\"flex-large\">\r\n                    {editing ? (\r\n                        <Fragment>\r\n                            <h2>Edit Berry</h2>\r\n                            <EditBerryForm\r\n                                editing={editing}\r\n                                setEditing={setEditing}\r\n                                currentBerry={currentBerry}\r\n                                updateBerry={updateBerry}\r\n                            />\r\n                        </Fragment>\r\n                    ) : (\r\n                        <Fragment>\r\n                            <AddBerryForm addBerry={addBerry} />\r\n                        </Fragment>\r\n                    )}\r\n                </div>\r\n                <div className=\"flex-large\">\r\n                    <BerriesTable berries={berries} editRow={editRow} deleteBerry={deleteBerry} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BerryPageAdmin;","import React from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport NavBar from './components/NavBar.js';\nimport HomePage from './components/HomePage.js';\nimport PokemonPage from './components/PokemonPage.js';\nimport BerryPage from './components/BerryPage.js';\nimport PokemonPageAdmin from './components/PokemonPageAdmin.js'\nimport BerryPageAdmin from './components/BerryPageAdmin.js'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBar />\n      <div className=\"main\">\n        <Routes>\n          <Route exact path=\"/\" element={<HomePage />}></Route>\n          <Route path=\"/pokemon\" element={<PokemonPage />}></Route>\n          <Route path=\"/berry\" element={<BerryPage />}></Route>\n          <Route path=\"/admin\"></Route>\n          <Route path=\"/admin/pokemon-admin\" element={<PokemonPageAdmin />}>\n          </Route>\n          <Route path=\"/admin/berry-admin\" element={<BerryPageAdmin />}>\n          </Route>\n        </Routes>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport './index.css';\nimport './styles.css';\nimport './App.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}